
@{
    ViewData["Title"] = "EditText";
}
@{
}
@model RhymeBinder.Models.DTOModels.TextEdit
@{
    int groupIndex = 0; 

    string binderColorTag = "";
    if (!string.IsNullOrWhiteSpace(Model.BinderColor))
    {
        binderColorTag = $"background-color: {Model.BinderColor};";
    }
    string menuTextcolorTag = $"color: {Model.DisplayTitleColor};";
    string styleTags = binderColorTag + menuTextcolorTag;
}
@Html.Partial("_Alert")


<form class="editor-view-wrapper" action="EditText" method="post" id="edit">
    <input type="hidden" name="TextHeaderId" value="@Model.TextHeaderId" />
    <input type="hidden" name="TextId" value="@Model.TextId" />
    <input type="hidden" name="TextNoteId" value="@Model.TextNoteId" />    
    <input type="hidden" name="BinderId" value="@Model.BinderId" />   
 
    <input type="hidden" name="UserId" value="@Model.UserId" />
    <input type="hidden" name="BodyCursorPosition" id="body_cursor_position" value="@Model.BodyCursorPosition" />
    <input type="hidden" name="BodyScrollPosition" id="body_scroll_position" value="@Model.BodyScrollPosition" />
    <input type="hidden" name="NoteCursorPosition" id="note_cursor_position" value="@Model.NoteCursorPosition" />
    <input type="hidden" name="NoteScrollPosition" id="note_scroll_position" value="@Model.NoteScrollPosition" />
    <input type="hidden" name="TitleCursorPosition" id="title_cursor_position" value="@Model.TitleCursorPosition" />
    <input type="hidden" name="ActiveElement" id="form_focus" value="@Model.ActiveElement" />
    <input type="hidden" name="ShowLineCount" id="show_line_count" value="@Model.ShowLineCount" />
    <input type="hidden" name="ShowParagraphCount" id="show_paragraph_count" value="@Model.ShowParagraphCount" />
    <input type="submit" hidden name="action" value="" id="bttn_sub" />

    <input type="hidden" name="value" value="-1" id="record_id" />

   
    <div class="menu-bar">
        <div class="menu-bar-main mobile-menu-bar-main">
            <div class="menu-bar-title menu-bar-title-mobile" style="@styleTags" >
                Editing: @Model.DisplayTitle
            </div>
            <div class="menu-bar-item menu-bar-item-mobileHide">
                Status:
            </div>
            <div class="menu-bar-item">
                <select name="TextRevisionStatusId" id="revision_status">
                    @foreach (var revisionStatus in Model.AllRevisionStatuses)
                    {
                        if (revisionStatus.TextRevisionStatusId == @Model.TextRevisionStatusId)
                        {
                            <option value="@revisionStatus.TextRevisionStatusId" selected>@revisionStatus.TextRevisionStatus1</option>
                        }
                        else
                        {
                            <option value="@revisionStatus.TextRevisionStatusId">@revisionStatus.TextRevisionStatus1</option>
                        }
                    }
                </select>
            </div>

            @if(Model.Groups.Count() > 0)
            {
                <div class="menu-bar-dropdown menu-bar-dropdown-mobile">
                    <div class="button  menu-bar-button" onclick="open_group_list_modal_with_id('groups','EditText')">
                        Groups
                    </div>





@*                    <div class="menu-bar-dropdown-content">
                        <a class="menu-bar-dropdown-item" onclick="">Add to Group... </a> 
                            @foreach (var group in Model.AvailableGroups)
                            {
                               <a class="menu-bar-dropdown-item" onclick="selected_action_form_submit('AddGroup', @group.TextGroupId)">  + @group.GroupTitle</a>
                            }
                    </div>*@
                </div>
            }


            <div class="menu-bar-dropdown menu-bar-dropdown-mobile">
                <div class="button menu-bar-button-dropdown">
                    View ▼
                </div>
                <div class="menu-bar-dropdown-content">
                    <a class="menu-bar-dropdown-item" onclick="toggle_hide_element('show_line_count', this.id, 'line_count')" id="toggle_line_count">? Line Count</a>
                    <a class="menu-bar-dropdown-item" onclick="toggle_hide_element('show_paragraph_count', this.id, 'paragraph_count')" id="toggle_paragraph_count">? Stanza Count</a>
                </div>

            </div>
        </div>


        <div class="menu-bar-escape mobile-menu-bar-escape">
            <div class="menu-bar-item">
                <input type="submit" name="action" class="button menu-bar-button mobile-menu-bar-button-return" value="Return" id="return" onclick="set_form_submitting_true()" />
            </div>
            <div class="menu-bar-item">
                <input type="submit" name="action" class="button menu-bar-button mobile-menu-bar-button-save" value="Save" id="save" onclick="set_form_submitting_true()" />
            </div>
            <div class="menu-bar-item-right-final">
                <input type="submit" name="action" class="button menu-bar-button mobile-menu-bar-button-revision" value="Revision" id="revision" onclick="set_form_submitting_true()" />
            </div>
        </div>


    </div>


    <div class="title-bar">
        <textarea name="Title" class="title-box" id="title_edit_field" required>@Model.Title</textarea>
    </div>

    <div class="editor-container">
        <textarea name="TextBody" class="editor-box" id="body_edit_field" onscroll="sync_scroll()">@Model.TextBody</textarea>
    </div>
    <div class="ruler-container-a">
        <textarea class="ruler-box ruler-box-b" id="paragraph_count" name="paragraph_count" readonly></textarea>
    </div>
    <div class="ruler-container-b">
        <textarea class="ruler-box" id="line_count" name="line_count" readonly></textarea>
    </div>


    <div class="left-sidebar">
        <div class="left-sidebar-item">Vision No. @Model.VisionNumber</div>
        <div class="left-sidebar-item">Created @Model.Created.Value.ToString("d") by @Model.CreatedByUserName</div>
        <div class="left-sidebar-item">Last Edited @Model.LastModified.Value.ToString("d") by @Model.LastModifiedByUserName</div>
        @if (Model.PreviousTexts.Count() > 0)
        {
            <div></div>
            <div class="left-sidebar-item-heading" style="text-indent: 1em">Previous visions:</div>
            foreach (var prev in Model.PreviousTexts)
            {

                <div class="left-sidebar-item-heading">No. @prev.VisionNumber: <a href="#" data-drawer-trigger aria-controls="@prev.VisionNumber" aria-expanded="false">@prev.Title</a></div>
                <div class="left-sidebar-item">Status: @prev.Status</div>
                <div class="left-sidebar-item">Created @prev.Created.Value.ToString("d") by @prev.CreatedBy</div>
                <div class="left-sidebar-item">Last Edited @prev.LastModified.Value.ToString("d") by @prev.LastModifiedBy</div>
            }
        }
    </div>


    <div class="right-sidebar">
        @if (Model.Groups.Count > 0)
        {
            <div class="right-sidebar-item-heading">Member of Groups:</div>
            @foreach(var group in Model.Groups)
            {
                <div class="right-sidebar-item">
                    @if(group.Selected == true){
                        @group.GroupTitle
                    }
                </div>
            }
        }
        <div class="right-sidebar-item-heading">Notes:</div>
            <textarea name="Note" id="note_edit_field" class="editor-box">@Model.Note</textarea>

    </div>


    <div class="list-modal" id="groups"  >
        <div class="list-modal-header">
            Add / Remove Groups:
        </div>
        
        <div class="list-modal-content">


                @foreach(var group in Model.Groups)
                {
                    if (group.TextGroupId > 0)
                        {
                            <div name = "GroupId" style="display: none;">@group.TextGroupId</div>

                            string groupIdCheckboxName = $"Group{group.TextGroupId}";
                            string groupIdSelectedValueName = $"Group{group.TextGroupId}Selected";
                            string groupTextIdName =  $"Group{group.TextGroupId}TextId";
                            string groupSelectedTextCountName = $"Group{group.TextGroupId}SelectedTextCount";

                            <div class = "list-modal-content-item" name = @groupIdCheckboxName>
                            <input type="hidden" name="Groups[@groupIndex].TextGroupId" value="@group.TextGroupId" />
                            @if (group.Locked)
                            {
                                <input type="checkbox" id=@groupIdCheckboxName name="GroupCheckbox" value="true" disabled/>
                            }
                            else
                            {
                                <input type="checkbox" id=@groupIdCheckboxName name="GroupCheckbox" value="true"/>
                            }
                            <input type="hidden" name="Groups[@groupIndex].Selected" id=@groupIdSelectedValueName value="@group.Selected.ToString()"/>
                            <div id=@groupSelectedTextCountName style="font-style:italic; font-size:smaller; padding-left:5px; padding-right:5px;"></div>
                            <div>@group.GroupTitle</div>
                            </div>
                            { groupIndex++; }
                    }
                }
             

        </div>
        
        <div class="list-modal-footer">
                <a class="button menu-bar-button" onclick="close_modal_with_id('groups','EditText')">Cancel</a>
            <a class="button menu-bar-button" onclick="set_form_submitting_true(); submit_modal('EditText')">Submit</a>
        </div>
    </div>


</form>

@* Populate Drawers *@
@foreach (var prev in Model.PreviousTexts)
{
    <section class="drawer drawer--left" id="@prev.VisionNumber" data-drawer-target>
        <div class="drawer__wrapper">
            <div class="drawer__header">
                <div class="drawer__title">
                    @prev.Title (Vision No.: @prev.VisionNumber)
                </div>
                <button class="drawer__close" data-drawer-close aria-label="Close Drawer"></button>
            </div>
            <textarea class="drawer__content">
                @prev.TextBody
            </textarea>
        </div>
    </section>
}

<div id="textWidthSample" class="text-sample" z-axis="9998" hidden>X</div>


<script language="Javascript" src="~/js/autosave.js"></script>
<script language="Javascript" src="~/js/site.js"></script>
<script language="Javascript" src="~/js/editor.js"></script>
    <script language="Javascript">
    window.onload = on_start_get_form_sub_button('bttn_sub');
</script>

<br />







