
@{
    ViewData["Title"] = "Import Files";
}
@model RhymeBinder.Models.ViewModels.DisplayInputForm

<div class="view-wrapper">

    <div class="menu-bar">
        <div class="menu-bar-main mobile-menu-bar-main">
            <div class="menu-bar-title menu-bar-title-mobile" >
                File Import: 
            </div>
        </div>
    </div>


    
    <form enctype="multipart/form-data" method="post" class="form-wrapper">
        <input type="hidden" name="ImportEntry.UserId" value="@Model.UserId"/>
        <input type="hidden" name="Binders" value="@Model.Binders"/>
        <input type="hidden" name="Results" value="@Model.Results"/>

        <div class="form-item-title">
            Import Files -
        </div>
        <div class="form-item-large-entry">
            Will attempt to import selected files and convert them to texts to be stored in the specified binders.
        </div>

        <div class="form-item-title">
            Select Files:
        </div>
        <div class="form-item-descriptor-one">
                <input asp-for="ImportEntry.File" multiple type="file">
        </div>
    
        <div class="form-item-title">
            Select Existing Binder:
        </div>
        <div class="form-item-descriptor-one">
            <select name="ImportEntry.BinderId" >
                    @foreach (var binder in Model.Binders)
                    {
                        <option value="@binder.BinderId">@binder.Name</option>
                    }
                </select>
        </div>

        <div class="form-item-title">
            Create New Binder:
        </div>
        <div class="form-item-descriptor-one" >
            Create New:<input type="checkbox" name="ImportEntry.CreateNewBinderForImport" />
        </div>
        <div class="form-item-descriptor-two">
            <textarea name="ImportEntry.NewBinderName" class="form-single-line-box">New Import Binder Name</textarea>
        </div>
    
        <div class="form-item-title">
            Derive Title:
        </div>
        <div class="form-item-large-entry" >
            <input type="radio" id="filename" name="ImportEntry.TitleDerivationMethod" value="filename" checked="checked"/>
            <label for="filename">Set Title To File Name</label>
            <input type="radio" id="firstline" name="ImportEntry.TitleDerivationMethod" value="firstline" />
            <label for="firstline">Set Title To First Line of File</label>

        </div>
    
        <div class="form-item-title">
            Import Selected Files:
        </div>
        <div class="form-item-descriptor-two">
            <input asp-page-handler="Upload" class="btn" type="submit" value="Upload">
        </div>

    @if(Model.Results.Count() > 0)
    {
        <div class="form-divider"><hr /></div>
    
        <div class="form-item-title">
            Results:
        </div>
        <div class="form-item-large-entry">
            <table>
                <tr>
                    <th>File</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>Failure Reason</th>
                </tr>
                @foreach(var result in @Model.Results){
                    <tr>
                        <td>@result.FileName</td>
                        <td>@result.FileType</td>
                        <td>@result.ImportStatus</td>
                        <td>@result.FailureMessage</td>
                    </tr>
                }
            </table>
        </div>

    }

    </form>
</div>

